package com.example.demo130806;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.graphics.PixelFormat;
import android.hardware.Camera;
import android.hardware.Camera.AutoFocusCallback;
import android.hardware.Camera.PictureCallback;
import android.hardware.Camera.Size;
import android.os.Environment;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class CamaraPreview extends SurfaceView implements
		SurfaceHolder.Callback {
	SurfaceHolder holder;
	Camera camera;

	public CamaraPreview(Context context) {
		super(context);
		// 获取SurfaceHolder
		holder = getHolder();
		holder.addCallback(this);
		// 设置缓存类型
		holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
	}

	@Override
	public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {
		// TODO Auto-generated method stub

	}

	@Override
	public void surfaceCreated(SurfaceHolder arg0) {
		// 打开默认的摄像头
		camera = Camera.open();
		// 获取当前打开摄像头的配置参数
		Camera.Parameters parameters = camera.getParameters();
		List<Size> listSizes = parameters.getSupportedPictureSizes();
		for (Size size : listSizes) {
			System.out.println(size.width + "," + size.height);
		}
		// 设置图片格式
		parameters.setPictureFormat(PixelFormat.JPEG);
		//

		// 设置预览的大小
		// parameters.setPictureSize(width, height);
		try {
			// 将预览交由SurfaceView处理
			camera.setPreviewDisplay(holder);
			camera.setDisplayOrientation(90);
			// 开始预览
			camera.startPreview();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void surfaceDestroyed(SurfaceHolder arg0) {
		if (camera != null) {
			camera.release();
			camera = null;
		}
	}

	// 拍照
	public void tackPicture() {
		camera.autoFocus(new AutoFocusCallback() {

			@Override
			public void onAutoFocus(boolean success, Camera camera) {
				if (success) {
					camera.takePicture(null, null, pictureCallBack);
				}
			}
		});
	}

	PictureCallback pictureCallBack = new PictureCallback() {

		@Override
		public void onPictureTaken(byte[] data, Camera camera) {
			// 设置图片的保存位置
			String pictureName = Environment.getExternalStorageDirectory()
					.getAbsolutePath()
					+ File.separator
					+ System.currentTimeMillis() + ".jpeg";
			// 获取Bitmap对象
			Bitmap bitmap = BitmapFactory.decodeByteArray(data, 0, data.length);
			try {
				BufferedOutputStream out = new BufferedOutputStream(
						new FileOutputStream(pictureName));
				// 将图片压入缓存
				bitmap.compress(CompressFormat.JPEG, 90, out);
				out.flush();
				out.close();
				// 图片保存完成之后，继续预览
				camera.startPreview();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	};
}





package com.example.demo130806;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;

public class MainActivity extends Activity implements OnClickListener {
	Button btn_takePicture;

	LinearLayout layout_preview;
	CamaraPreview preview;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		btn_takePicture = (Button) findViewById(R.id.btn_takePicture);
		layout_preview = (LinearLayout) findViewById(R.id.lay_preview);
		preview = new CamaraPreview(this);
		layout_preview.addView(preview);
		btn_takePicture.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		// 调用拍照功能
		preview.tackPicture();
	}
}



